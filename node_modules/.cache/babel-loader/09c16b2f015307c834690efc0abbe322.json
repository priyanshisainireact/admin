{"ast":null,"code":"var sanitizer = require('./sanitize.js');\n\nmodule.exports = function (json, options) {\n  if (json instanceof Buffer) {\n    json = json.toString();\n  }\n\n  var obj = null;\n\n  if (typeof json == 'string') {\n    try {\n      obj = JSON.parse(json);\n    } catch (e) {\n      throw new Error(\"The JSON structure is invalid\");\n    }\n  } else {\n    obj = json;\n  }\n\n  var toXml = new ToXml(options);\n  toXml.parse(obj);\n  return toXml.xml;\n};\n\nToXml.prototype.parse = function (obj) {\n  if (!obj) return;\n  var self = this;\n  var keys = Object.keys(obj);\n  var len = keys.length; // First pass, extract strings only\n\n  for (var i = 0; i < len; i++) {\n    var key = keys[i],\n        value = obj[key],\n        isArray = Array.isArray(value);\n    var type = typeof value;\n\n    if (type == 'string' || type == 'number' || type == 'boolean' || isArray) {\n      var it = isArray ? value : [value];\n      it.forEach(function (subVal) {\n        if (typeof subVal != 'object') {\n          if (key == '$t') {\n            self.addTextContent(subVal);\n          } else {\n            self.addAttr(key, subVal);\n          }\n        }\n      });\n    }\n  } // Second path, now handle sub-objects and arrays\n\n\n  for (var i = 0; i < len; i++) {\n    var key = keys[i];\n\n    if (Array.isArray(obj[key])) {\n      var elems = obj[key];\n      var l = elems.length;\n\n      for (var j = 0; j < l; j++) {\n        var elem = elems[j];\n\n        if (typeof elem == 'object') {\n          self.openTag(key);\n          self.parse(elem);\n          self.closeTag(key);\n        }\n      }\n    } else if (typeof obj[key] == 'object' && !(self.options.ignoreNull && obj[key] === null)) {\n      self.openTag(key);\n      self.parse(obj[key]);\n      self.closeTag(key);\n    }\n  }\n};\n\nToXml.prototype.openTag = function (key) {\n  this.completeTag();\n  this.xml += '<' + key;\n  this.tagIncomplete = true;\n};\n\nToXml.prototype.addAttr = function (key, val) {\n  if (this.options.sanitize) {\n    val = sanitizer.sanitize(val, false, true);\n  }\n\n  this.xml += ' ' + key + '=\"' + val + '\"';\n};\n\nToXml.prototype.addTextContent = function (text) {\n  this.completeTag();\n  var newText = this.options.sanitize ? sanitizer.sanitize(text) : text;\n  this.xml += newText;\n};\n\nToXml.prototype.closeTag = function (key) {\n  this.completeTag();\n  this.xml += '</' + key + '>';\n};\n\nToXml.prototype.completeTag = function () {\n  if (this.tagIncomplete) {\n    this.xml += '>';\n    this.tagIncomplete = false;\n  }\n};\n\nfunction ToXml(options) {\n  var defaultOpts = {\n    sanitize: false,\n    ignoreNull: false\n  };\n\n  if (options) {\n    for (var opt in options) {\n      defaultOpts[opt] = options[opt];\n    }\n  }\n\n  this.options = defaultOpts;\n  this.xml = '';\n  this.tagIncomplete = false;\n}","map":{"version":3,"sources":["/home/cloudmynds/Desktop/admin/node_modules/xml2json/lib/json2xml.js"],"names":["sanitizer","require","module","exports","json","options","Buffer","toString","obj","JSON","parse","e","Error","toXml","ToXml","xml","prototype","self","keys","Object","len","length","i","key","value","isArray","Array","type","it","forEach","subVal","addTextContent","addAttr","elems","l","j","elem","openTag","closeTag","ignoreNull","completeTag","tagIncomplete","val","sanitize","text","newText","defaultOpts","opt"],"mappings":"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","sourcesContent":["var sanitizer = require('./sanitize.js')\n\nmodule.exports = function (json, options) {\n    if (json instanceof Buffer) {\n        json = json.toString();\n    }\n\n    var obj = null;\n    if (typeof(json) == 'string') {\n        try {\n            obj = JSON.parse(json);\n        } catch(e) {\n            throw new Error(\"The JSON structure is invalid\");\n        }\n    } else {\n        obj = json;\n    }\n    var toXml = new ToXml(options);\n    toXml.parse(obj);\n    return toXml.xml;\n}\n\nToXml.prototype.parse = function(obj) {\n    if (!obj) return;\n\n    var self = this;\n    var keys = Object.keys(obj);\n    var len = keys.length;\n\n    // First pass, extract strings only\n    for (var i = 0; i < len; i++) {\n        var key = keys[i], value = obj[key], isArray = Array.isArray(value);\n        var type = typeof(value);\n        if (type == 'string' || type == 'number' || type == 'boolean' || isArray) {\n            var it = isArray ? value : [value];\n\n            it.forEach(function(subVal) {\n                if (typeof(subVal) != 'object') {\n                    if (key == '$t') {\n                        self.addTextContent(subVal);\n                    } else {\n                        self.addAttr(key, subVal);\n                    }\n                }\n            });\n        }\n    }\n\n    // Second path, now handle sub-objects and arrays\n    for (var i = 0; i < len; i++) {\n        var key = keys[i];\n\n        if (Array.isArray(obj[key])) {\n            var elems = obj[key];\n            var l = elems.length;\n            for (var j = 0; j < l; j++) {\n                var elem = elems[j];\n\n                if (typeof(elem) == 'object') {\n                    self.openTag(key);\n                    self.parse(elem);\n                    self.closeTag(key);\n                }\n            }\n        } else if (typeof(obj[key]) == 'object' && !(self.options.ignoreNull && obj[key] === null)) {\n            self.openTag(key);\n            self.parse(obj[key]);\n            self.closeTag(key);\n        }\n    }\n\n};\n\nToXml.prototype.openTag = function(key) {\n    this.completeTag();\n    this.xml += '<' + key;\n    this.tagIncomplete = true;\n}\nToXml.prototype.addAttr = function(key, val) {\n    if (this.options.sanitize) {\n        val = sanitizer.sanitize(val, false, true);\n    }\n    this.xml += ' ' + key + '=\"' + val + '\"';\n}\nToXml.prototype.addTextContent = function(text) {\n    this.completeTag();\n    var newText = (this.options.sanitize ? sanitizer.sanitize(text) : text);\n    this.xml += newText;\n}\nToXml.prototype.closeTag = function(key) {\n    this.completeTag();\n    this.xml += '</' + key + '>';\n}\nToXml.prototype.completeTag = function() {\n    if (this.tagIncomplete) {\n        this.xml += '>';\n        this.tagIncomplete = false;\n    }\n}\nfunction ToXml(options) {\n    var defaultOpts = {\n        sanitize: false,\n        ignoreNull: false\n    };\n\n    if (options) {\n        for (var opt in options) {\n            defaultOpts[opt] = options[opt];\n        }\n    }\n\n    this.options = defaultOpts;\n    this.xml = '';\n    this.tagIncomplete = false;\n}\n"]},"metadata":{},"sourceType":"script"}