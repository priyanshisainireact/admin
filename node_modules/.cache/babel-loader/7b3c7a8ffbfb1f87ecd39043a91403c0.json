{"ast":null,"code":"'use strict'; // Load modules\n\nvar _classCallCheck = require(\"/home/cloudmynds/Desktop/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/cloudmynds/Desktop/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/cloudmynds/Desktop/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/cloudmynds/Desktop/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Any = require('../any');\n\nvar Hoek = require('hoek'); // Declare internals\n\n\nvar internals = {};\n\ninternals.Lazy = /*#__PURE__*/function (_Any) {\n  _inherits(_class, _Any);\n\n  var _super = _createSuper(_class);\n\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    _this = _super.call(this);\n    _this._type = 'lazy';\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: \"_base\",\n    value: function _base(value, state, options) {\n      var result = {\n        value: value\n      };\n      var lazy = this._flags.lazy;\n\n      if (!lazy) {\n        result.errors = this.createError('lazy.base', null, state, options);\n        return result;\n      }\n\n      var schema = lazy();\n\n      if (!(schema instanceof Any)) {\n        result.errors = this.createError('lazy.schema', null, state, options);\n        return result;\n      }\n\n      return schema._validate(value, state, options);\n    }\n  }, {\n    key: \"set\",\n    value: function set(fn) {\n      Hoek.assert(typeof fn === 'function', 'You must provide a function as first argument');\n      var obj = this.clone();\n      obj._flags.lazy = fn;\n      return obj;\n    }\n  }]);\n\n  return _class;\n}(Any);\n\nmodule.exports = new internals.Lazy();","map":{"version":3,"sources":["/home/cloudmynds/Desktop/admin/node_modules/joi/lib/types/lazy/index.js"],"names":["Any","require","Hoek","internals","Lazy","_type","value","state","options","result","lazy","_flags","errors","createError","schema","_validate","fn","assert","obj","clone","module","exports"],"mappings":"AAAA,a,CAEA;;;;;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB,C,CAGA;;;AAEA,IAAME,SAAS,GAAG,EAAlB;;AAGAA,SAAS,CAACC,IAAV;AAAA;;AAAA;;AAEI,oBAAc;AAAA;;AAAA;;AAEV;AACA,UAAKC,KAAL,GAAa,MAAb;AAHU;AAIb;;AANL;AAAA;AAAA,0BAQUC,KARV,EAQiBC,KARjB,EAQwBC,OARxB,EAQiC;AAEzB,UAAMC,MAAM,GAAG;AAAEH,QAAAA,KAAK,EAALA;AAAF,OAAf;AACA,UAAMI,IAAI,GAAG,KAAKC,MAAL,CAAYD,IAAzB;;AAEA,UAAI,CAACA,IAAL,EAAW;AACPD,QAAAA,MAAM,CAACG,MAAP,GAAgB,KAAKC,WAAL,CAAiB,WAAjB,EAA8B,IAA9B,EAAoCN,KAApC,EAA2CC,OAA3C,CAAhB;AACA,eAAOC,MAAP;AACH;;AAED,UAAMK,MAAM,GAAGJ,IAAI,EAAnB;;AAEA,UAAI,EAAEI,MAAM,YAAYd,GAApB,CAAJ,EAA8B;AAC1BS,QAAAA,MAAM,CAACG,MAAP,GAAgB,KAAKC,WAAL,CAAiB,aAAjB,EAAgC,IAAhC,EAAsCN,KAAtC,EAA6CC,OAA7C,CAAhB;AACA,eAAOC,MAAP;AACH;;AAED,aAAOK,MAAM,CAACC,SAAP,CAAiBT,KAAjB,EAAwBC,KAAxB,EAA+BC,OAA/B,CAAP;AACH;AA1BL;AAAA;AAAA,wBA4BQQ,EA5BR,EA4BY;AAEJd,MAAAA,IAAI,CAACe,MAAL,CAAY,OAAOD,EAAP,KAAc,UAA1B,EAAsC,+CAAtC;AAEA,UAAME,GAAG,GAAG,KAAKC,KAAL,EAAZ;AACAD,MAAAA,GAAG,CAACP,MAAJ,CAAWD,IAAX,GAAkBM,EAAlB;AACA,aAAOE,GAAP;AACH;AAnCL;;AAAA;AAAA,EAA+BlB,GAA/B;;AAuCAoB,MAAM,CAACC,OAAP,GAAiB,IAAIlB,SAAS,CAACC,IAAd,EAAjB","sourcesContent":["'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.Lazy = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'lazy';\n    }\n\n    _base(value, state, options) {\n\n        const result = { value };\n        const lazy = this._flags.lazy;\n\n        if (!lazy) {\n            result.errors = this.createError('lazy.base', null, state, options);\n            return result;\n        }\n\n        const schema = lazy();\n\n        if (!(schema instanceof Any)) {\n            result.errors = this.createError('lazy.schema', null, state, options);\n            return result;\n        }\n\n        return schema._validate(value, state, options);\n    }\n\n    set(fn) {\n\n        Hoek.assert(typeof fn === 'function', 'You must provide a function as first argument');\n\n        const obj = this.clone();\n        obj._flags.lazy = fn;\n        return obj;\n    }\n\n};\n\nmodule.exports = new internals.Lazy();\n"]},"metadata":{},"sourceType":"script"}