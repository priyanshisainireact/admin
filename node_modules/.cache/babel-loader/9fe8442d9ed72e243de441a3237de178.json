{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar expat = require('bindings')('node_expat');\n\nvar Stream = require('stream').Stream;\n\nvar Parser = function Parser(encoding) {\n  this.encoding = encoding;\n\n  this._getNewParser();\n\n  this.parser.emit = this.emit.bind(this); // Stream API\n\n  this.writable = true;\n  this.readable = true;\n};\n\nutil.inherits(Parser, Stream);\n\nParser.prototype._getNewParser = function () {\n  this.parser = new expat.Parser(this.encoding);\n};\n\nParser.prototype.parse = function (buf, isFinal) {\n  return this.parser.parse(buf, isFinal);\n};\n\nParser.prototype.setEncoding = function (encoding) {\n  this.encoding = encoding;\n  return this.parser.setEncoding(this.encoding);\n};\n\nParser.prototype.setUnknownEncoding = function (map, convert) {\n  return this.parser.setUnknownEncoding(map, convert);\n};\n\nParser.prototype.getError = function () {\n  return this.parser.getError();\n};\n\nParser.prototype.stop = function () {\n  return this.parser.stop();\n};\n\nParser.prototype.pause = function () {\n  return this.stop();\n};\n\nParser.prototype.resume = function () {\n  return this.parser.resume();\n};\n\nParser.prototype.destroy = function () {\n  this.parser.stop();\n  this.end();\n};\n\nParser.prototype.destroySoon = function () {\n  this.destroy();\n};\n\nParser.prototype.write = function (data) {\n  var error, result;\n\n  try {\n    result = this.parse(data);\n\n    if (!result) {\n      error = this.getError();\n    }\n  } catch (e) {\n    error = e;\n  }\n\n  if (error) {\n    this.emit('error', error);\n    this.emit('close');\n  }\n\n  return result;\n};\n\nParser.prototype.end = function (data) {\n  var error, result;\n\n  try {\n    result = this.parse(data || '', true);\n\n    if (!result) {\n      error = this.getError();\n    }\n  } catch (e) {\n    error = e;\n  }\n\n  if (!error) {\n    this.emit('end');\n  } else {\n    this.emit('error', error);\n  }\n\n  this.emit('close');\n};\n\nParser.prototype.reset = function () {\n  return this.parser.reset();\n};\n\nParser.prototype.getCurrentLineNumber = function () {\n  return this.parser.getCurrentLineNumber();\n};\n\nParser.prototype.getCurrentColumnNumber = function () {\n  return this.parser.getCurrentColumnNumber();\n};\n\nParser.prototype.getCurrentByteIndex = function () {\n  return this.parser.getCurrentByteIndex();\n};\n\nexports.Parser = Parser;\n\nexports.createParser = function (cb) {\n  var parser = new Parser();\n\n  if (cb) {\n    parser.on('startElement', cb);\n  }\n\n  return parser;\n};","map":{"version":3,"sources":["/home/cloudmynds/Desktop/admin/node_modules/node-expat/lib/node-expat.js"],"names":["util","require","expat","Stream","Parser","encoding","_getNewParser","parser","emit","bind","writable","readable","inherits","prototype","parse","buf","isFinal","setEncoding","setUnknownEncoding","map","convert","getError","stop","pause","resume","destroy","end","destroySoon","write","data","error","result","e","reset","getCurrentLineNumber","getCurrentColumnNumber","getCurrentByteIndex","exports","createParser","cb","on"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAAP,CAAoB,YAApB,CAAZ;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAP,CAAkBE,MAA/B;;AAEA,IAAIC,MAAM,GAAG,SAATA,MAAS,CAAUC,QAAV,EAAoB;AAC/B,OAAKA,QAAL,GAAgBA,QAAhB;;AACA,OAAKC,aAAL;;AACA,OAAKC,MAAL,CAAYC,IAAZ,GAAmB,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAnB,CAH+B,CAK/B;;AACA,OAAKC,QAAL,GAAgB,IAAhB;AACA,OAAKC,QAAL,GAAgB,IAAhB;AACD,CARD;;AASAX,IAAI,CAACY,QAAL,CAAcR,MAAd,EAAsBD,MAAtB;;AAEAC,MAAM,CAACS,SAAP,CAAiBP,aAAjB,GAAiC,YAAY;AAC3C,OAAKC,MAAL,GAAc,IAAIL,KAAK,CAACE,MAAV,CAAiB,KAAKC,QAAtB,CAAd;AACD,CAFD;;AAIAD,MAAM,CAACS,SAAP,CAAiBC,KAAjB,GAAyB,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AAC/C,SAAO,KAAKT,MAAL,CAAYO,KAAZ,CAAkBC,GAAlB,EAAuBC,OAAvB,CAAP;AACD,CAFD;;AAIAZ,MAAM,CAACS,SAAP,CAAiBI,WAAjB,GAA+B,UAAUZ,QAAV,EAAoB;AACjD,OAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAO,KAAKE,MAAL,CAAYU,WAAZ,CAAwB,KAAKZ,QAA7B,CAAP;AACD,CAHD;;AAKAD,MAAM,CAACS,SAAP,CAAiBK,kBAAjB,GAAsC,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AAC5D,SAAO,KAAKb,MAAL,CAAYW,kBAAZ,CAA+BC,GAA/B,EAAoCC,OAApC,CAAP;AACD,CAFD;;AAIAhB,MAAM,CAACS,SAAP,CAAiBQ,QAAjB,GAA4B,YAAY;AACtC,SAAO,KAAKd,MAAL,CAAYc,QAAZ,EAAP;AACD,CAFD;;AAGAjB,MAAM,CAACS,SAAP,CAAiBS,IAAjB,GAAwB,YAAY;AAClC,SAAO,KAAKf,MAAL,CAAYe,IAAZ,EAAP;AACD,CAFD;;AAGAlB,MAAM,CAACS,SAAP,CAAiBU,KAAjB,GAAyB,YAAY;AACnC,SAAO,KAAKD,IAAL,EAAP;AACD,CAFD;;AAGAlB,MAAM,CAACS,SAAP,CAAiBW,MAAjB,GAA0B,YAAY;AACpC,SAAO,KAAKjB,MAAL,CAAYiB,MAAZ,EAAP;AACD,CAFD;;AAIApB,MAAM,CAACS,SAAP,CAAiBY,OAAjB,GAA2B,YAAY;AACrC,OAAKlB,MAAL,CAAYe,IAAZ;AACA,OAAKI,GAAL;AACD,CAHD;;AAKAtB,MAAM,CAACS,SAAP,CAAiBc,WAAjB,GAA+B,YAAY;AACzC,OAAKF,OAAL;AACD,CAFD;;AAIArB,MAAM,CAACS,SAAP,CAAiBe,KAAjB,GAAyB,UAAUC,IAAV,EAAgB;AACvC,MAAIC,KAAJ,EAAWC,MAAX;;AACA,MAAI;AACFA,IAAAA,MAAM,GAAG,KAAKjB,KAAL,CAAWe,IAAX,CAAT;;AACA,QAAI,CAACE,MAAL,EAAa;AACXD,MAAAA,KAAK,GAAG,KAAKT,QAAL,EAAR;AACD;AACF,GALD,CAKE,OAAOW,CAAP,EAAU;AACVF,IAAAA,KAAK,GAAGE,CAAR;AACD;;AACD,MAAIF,KAAJ,EAAW;AACT,SAAKtB,IAAL,CAAU,OAAV,EAAmBsB,KAAnB;AACA,SAAKtB,IAAL,CAAU,OAAV;AACD;;AACD,SAAOuB,MAAP;AACD,CAfD;;AAiBA3B,MAAM,CAACS,SAAP,CAAiBa,GAAjB,GAAuB,UAAUG,IAAV,EAAgB;AACrC,MAAIC,KAAJ,EAAWC,MAAX;;AACA,MAAI;AACFA,IAAAA,MAAM,GAAG,KAAKjB,KAAL,CAAWe,IAAI,IAAI,EAAnB,EAAuB,IAAvB,CAAT;;AACA,QAAI,CAACE,MAAL,EAAa;AACXD,MAAAA,KAAK,GAAG,KAAKT,QAAL,EAAR;AACD;AACF,GALD,CAKE,OAAOW,CAAP,EAAU;AACVF,IAAAA,KAAK,GAAGE,CAAR;AACD;;AAED,MAAI,CAACF,KAAL,EAAY;AACV,SAAKtB,IAAL,CAAU,KAAV;AACD,GAFD,MAEO;AACL,SAAKA,IAAL,CAAU,OAAV,EAAmBsB,KAAnB;AACD;;AACD,OAAKtB,IAAL,CAAU,OAAV;AACD,CAjBD;;AAmBAJ,MAAM,CAACS,SAAP,CAAiBoB,KAAjB,GAAyB,YAAY;AACnC,SAAO,KAAK1B,MAAL,CAAY0B,KAAZ,EAAP;AACD,CAFD;;AAGA7B,MAAM,CAACS,SAAP,CAAiBqB,oBAAjB,GAAwC,YAAY;AAClD,SAAO,KAAK3B,MAAL,CAAY2B,oBAAZ,EAAP;AACD,CAFD;;AAGA9B,MAAM,CAACS,SAAP,CAAiBsB,sBAAjB,GAA0C,YAAY;AACpD,SAAO,KAAK5B,MAAL,CAAY4B,sBAAZ,EAAP;AACD,CAFD;;AAGA/B,MAAM,CAACS,SAAP,CAAiBuB,mBAAjB,GAAuC,YAAY;AACjD,SAAO,KAAK7B,MAAL,CAAY6B,mBAAZ,EAAP;AACD,CAFD;;AAIAC,OAAO,CAACjC,MAAR,GAAiBA,MAAjB;;AAEAiC,OAAO,CAACC,YAAR,GAAuB,UAAUC,EAAV,EAAc;AACnC,MAAIhC,MAAM,GAAG,IAAIH,MAAJ,EAAb;;AACA,MAAImC,EAAJ,EAAQ;AACNhC,IAAAA,MAAM,CAACiC,EAAP,CAAU,cAAV,EAA0BD,EAA1B;AACD;;AACD,SAAOhC,MAAP;AACD,CAND","sourcesContent":["'use strict'\n\nvar util = require('util')\nvar expat = require('bindings')('node_expat')\nvar Stream = require('stream').Stream\n\nvar Parser = function (encoding) {\n  this.encoding = encoding\n  this._getNewParser()\n  this.parser.emit = this.emit.bind(this)\n\n  // Stream API\n  this.writable = true\n  this.readable = true\n}\nutil.inherits(Parser, Stream)\n\nParser.prototype._getNewParser = function () {\n  this.parser = new expat.Parser(this.encoding)\n}\n\nParser.prototype.parse = function (buf, isFinal) {\n  return this.parser.parse(buf, isFinal)\n}\n\nParser.prototype.setEncoding = function (encoding) {\n  this.encoding = encoding\n  return this.parser.setEncoding(this.encoding)\n}\n\nParser.prototype.setUnknownEncoding = function (map, convert) {\n  return this.parser.setUnknownEncoding(map, convert)\n}\n\nParser.prototype.getError = function () {\n  return this.parser.getError()\n}\nParser.prototype.stop = function () {\n  return this.parser.stop()\n}\nParser.prototype.pause = function () {\n  return this.stop()\n}\nParser.prototype.resume = function () {\n  return this.parser.resume()\n}\n\nParser.prototype.destroy = function () {\n  this.parser.stop()\n  this.end()\n}\n\nParser.prototype.destroySoon = function () {\n  this.destroy()\n}\n\nParser.prototype.write = function (data) {\n  var error, result\n  try {\n    result = this.parse(data)\n    if (!result) {\n      error = this.getError()\n    }\n  } catch (e) {\n    error = e\n  }\n  if (error) {\n    this.emit('error', error)\n    this.emit('close')\n  }\n  return result\n}\n\nParser.prototype.end = function (data) {\n  var error, result\n  try {\n    result = this.parse(data || '', true)\n    if (!result) {\n      error = this.getError()\n    }\n  } catch (e) {\n    error = e\n  }\n\n  if (!error) {\n    this.emit('end')\n  } else {\n    this.emit('error', error)\n  }\n  this.emit('close')\n}\n\nParser.prototype.reset = function () {\n  return this.parser.reset()\n}\nParser.prototype.getCurrentLineNumber = function () {\n  return this.parser.getCurrentLineNumber()\n}\nParser.prototype.getCurrentColumnNumber = function () {\n  return this.parser.getCurrentColumnNumber()\n}\nParser.prototype.getCurrentByteIndex = function () {\n  return this.parser.getCurrentByteIndex()\n}\n\nexports.Parser = Parser\n\nexports.createParser = function (cb) {\n  var parser = new Parser()\n  if (cb) {\n    parser.on('startElement', cb)\n  }\n  return parser\n}\n"]},"metadata":{},"sourceType":"script"}